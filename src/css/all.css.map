{"version":3,"sources":["base/_icons.scss","base/_helpers.scss","base/_reset.scss","base/_variables.scss","base/_typography.scss","base/_forms.scss","base/_mixins.scss","all.scss"],"names":[],"mappings":"AAAA;EACC,wBAAsB;EACtB,kCAAgC;EAChC,2PAIoD,EAAA;;AAErD;EACC,wBAAuB;EACvB,oCAAmC;EACnC,mCAAkC;EAClC,mBAAkB;EAClB,qBAAoB;EACpB,oBAAmB;EACnB,4FAA4F;EAC5F,sBAAqB;EACrB,qBAAoB,EACpB;;AACD;EAA4B,iBAAe,EAAG;;AAC9C;EAAwB,iBAAe,EAAG;;AAC1C;EAAyB,iBAAe,EAAG;;AAC3C;EAAkB,iBAAe,EAAG;;AACpC;EAAiB,iBAAe,EAAG;;AACnC;EAAmB,iBAAe,EAAG;;AACrC;EAAkB,iBAAe,EAAG;;AACpC;EAAmB,iBAAe,EAAG;;AACrC;EAAuB,iBAAe,EAAG;;AACzC;EAAmB,iBAAe,EAAG;;AACrC;EAAoB,iBAAe,EAAG;;AACtC;EAAkB,iBAAe,EAAG;;AACpC;EAAkB,iBAAe,EAAG;;AACpC;EAAkB,iBAAe,EAAG;;AACpC;EAAoB,iBAAe,EAAG;;AACtC;EAAiB,iBAAe,EAAG;;AACnC;EAAsB,iBAAe,EAAG;;AACxC;EAAkB,iBAAe,EAAG;;AACpC;EAAkB,iBAAe,EAAG;;AACpC;EAAkB,iBAAe,EAAG;;AACpC;EAAkB,iBAAe,EAAG;;AACpC;EAAkB,iBAAe,EAAG;;AACpC;EAAqB,iBAAe,EAAG;;AACvC;EAAmB,iBAAe,EAAG;;AACrC;EAAoB,iBAAe,EAAG;;AACtC;EAAiB,iBAAe,EAAG;;AACnC;EAAkB,iBAAe,EAAG;;AACpC;EAAkB,iBAAe,EAAG;;AACpC;EAAoB,iBAAe,EAAG;;AACtC;EAAkB,iBAAe,EAAG;;AACpC;EAAqB,iBAAe,EAAG;;ACzCtC;EACG,YAAW;EACX,eAAc;EACd,YAAW,EACZ;;AAoCH;EACE,oBAAmB;EAAE,OAAO;EAC5B,wBAAuB;EAAE,OAAO;EAChC,iBAAgB,EACjB;;ACrDD;EACC,uBAAsB,EACtB;;AACD;EACC,oBAAmB,EACnB;;AAED;EAAG,sBAAqB,EAAG;;AAE3B;EACE,YCJS;EDKT,iBCNU;EDOV,oECAuE;EDCvE,iBCWoB;EDVpB,oCAAmC;EACnC,mCAAkC,EACnC;;AAGD;EACE,gBAAe;EACf,aAAY;EACZ,oBAAkB,EACnB;;AAGD;EAAe,gBAAe,EAAE;;AAChC;EACC,gBAAc;EACd,8ICyBsB;EDxBtB,8JCwBsB,EDvBtB;;AAED;EACI;IACA,gBAAc;IACd,qBAAmB,EACpB,EAAA;;AEnCH;;;;;;;EAOE,qBDyC4B;ECxC5B,kBAAiB;EACjB,kBAAiB;EACjB,eDuCsB,ECtCvB;;AAED;EACE,gBD2BiB,EC1BlB;;AAED;EACE,gBDwBiB,ECvBlB;;AAED;EACE,gBDqBiB,ECpBlB;;AAED;EACE,gBDkBiB,ECjBlB;;AAED;EACE,gBDeiB,ECdlB;;AAED;EACE,gBDYiB,ECXlB;;AAED;EACE,gBAAe,EAChB;;AAED;EACE,eDrCY;ECsCZ,sBAAoB,EAIrB;EAND;IAII,eDnBuC,ECoBxC;;AC9CH;;EAEE,UAAS;EACT,WAAU;EACV,mBAAkB,EACnB;;AAED;;;;;;EAQE,yBAAwB;EACxB,yBAAwB;EACxB,WAAS;EACT,uBFdS;EEeT,qBFYuB,EEHxB;EArBD;;;;;;IAeI,mBFpBQ,EEqBT;ECuOD;;;;;;IDpOE,YFtBO,EG0P+B;EACxC;;;;;;IAAqB,WAAU;IDrO7B,YFtBO,EG2PkC;EAC3C;;;;;;IDtOE,YFtBO,EG4PqB;EAC9B;;;;;;IDvOE,YFtBO,EG6P0B;EACnC;;;;;;IDxOE,YFtBO,EG8PgB;;ADpO3B;EACE,yBAAwB,EACzB;;AAED;EACE,iBAAgB;EAChB,oBAAmB;EACnB,gBAAc;EACd,eAAa,EACd;;AAED;;;;;EAKE,yBAAwB;EACxB,yBAAwB;EACxB,gBAAe,EAChB;;AAED;;EAEC,sBAAoB;EACpB,oBAAkB,EAClB;;AAED;EAEC,mBAAiB,EACjB;;AAED;EACC,oBAAkB;EAClB,aAAW,EAEX;EADA;IAAQ,oBAAkB,EAAG;;AEpC9B;EACC,mBAAiB;EACjB,iBAAe,EACf;;AACD;EACC,kBAAgB;EAChB,eAAa;EACb,gBAAc,EACd","file":"all.css","sourcesContent":["@font-face{\r\n\tfont-family:\"iconfont\";\r\n\tsrc:url('../fonts/iconfont.eot');\r\n\tsrc:url('../fonts/iconfont.eot?#iefix') format('eot'),\r\n\t\turl('../fonts/iconfont.woff2') format('woff2'),\r\n\t\turl('../fonts/iconfont.woff') format('woff'),\r\n\t\turl('../fonts/iconfont.ttf') format('truetype'),\r\n\t\turl('../fonts/iconfont.svg#iconfont') format('svg');\r\n}\r\n.icon:before{\r\n\tfont-family: \"iconfont\";\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n\tfont-style: normal;\r\n\tfont-variant: normal;\r\n\tfont-weight: normal;\r\n\t/* speak: none; only necessary if not using the private unicode range (firstGlyph option) */\r\n\ttext-decoration: none;\r\n\ttext-transform: none;\r\n}\r\n.icon-arrow-down-alt:before{content:\"\\E001\";}\r\n.icon-arrow-down:before{content:\"\\E002\";}\r\n.icon-arrow-right:before{content:\"\\E003\";}\r\n.icon-bell:before{content:\"\\E004\";}\r\n.icon-box:before{content:\"\\E005\";}\r\n.icon-chart:before{content:\"\\E006\";}\r\n.icon-chat:before{content:\"\\E007\";}\r\n.icon-check:before{content:\"\\E008\";}\r\n.icon-checkmark:before{content:\"\\E009\";}\r\n.icon-close:before{content:\"\\E00A\";}\r\n.icon-delete:before{content:\"\\E00B\";}\r\n.icon-dots:before{content:\"\\E00C\";}\r\n.icon-down:before{content:\"\\E00D\";}\r\n.icon-edit:before{content:\"\\E00E\";}\r\n.icon-expand:before{content:\"\\E00F\";}\r\n.icon-eye:before{content:\"\\E010\";}\r\n.icon-gear-alt:before{content:\"\\E011\";}\r\n.icon-gear:before{content:\"\\E012\";}\r\n.icon-home:before{content:\"\\E013\";}\r\n.icon-info:before{content:\"\\E014\";}\r\n.icon-link:before{content:\"\\E015\";}\r\n.icon-logo:before{content:\"\\E016\";}\r\n.icon-network:before{content:\"\\E017\";}\r\n.icon-pause:before{content:\"\\E018\";}\r\n.icon-people:before{content:\"\\E019\";}\r\n.icon-pin:before{content:\"\\E01A\";}\r\n.icon-play:before{content:\"\\E01B\";}\r\n.icon-plus:before{content:\"\\E01C\";}\r\n.icon-search:before{content:\"\\E01D\";}\r\n.icon-star:before{content:\"\\E01E\";}\r\n.icon-warning:before{content:\"\\E01F\";}\r","// list reset\r\n%listreset {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n// clearfix\r\n%clearfix {\r\n &:after {\r\n    content: '';\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.clearfix {\r\n  @extend %clearfix;\r\n}\r\n\r\n\r\n// transition\r\n%transition {\r\n transition: all $animation-speed $animation-effect;\r\n}\r\n\r\n// justify nav\r\n%justify {\r\n text-align: justify;\r\n > * {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  text-align: left;\r\n }\r\n &:after {\r\n  content: '';\r\n  width: 100%;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n }\r\n}\r\n\r\n\r\n\r\n/// * Helper class to truncate and add ellipsis to a string too long for it to fit\r\n/// * on a single line.\r\n/// * 1. Prevent content from wrapping, forcing it on a single line.\r\n/// * 2. Add ellipsis at the end of the line.\r\n\r\n.ellipsis {\r\n  white-space: nowrap; /* 1 */\r\n  text-overflow: ellipsis; /* 2 */\r\n  overflow: hidden;\r\n}\r\n","html {\r\n\tbox-sizing: border-box;\r\n}\r\n*, *:before, *:after {\r\n\tbox-sizing: inherit;\r\n}\r\n\r\n* {max-height: 1000000px;}\r\n\r\nbody {\r\n  color: $base-text-color;\r\n  background: $base-background-color;\r\n  font: #{$base-font-size}/#{$base-line-height} $base-font-sans-serif;\r\n  min-width: $base-min-width;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n// adaptive images\r\nimg {\r\n  max-width: 100%;\r\n  height: auto;\r\n  vertical-align:top;\r\n}\r\n\r\n// google map fix\r\n.gm-style img {max-width: none}\r\na, button, input[type=\"submit\"]{\r\n\tcursor:pointer;\r\n\ttransition: color $animation-speed $animation-effect, background-color $animation-speed $animation-effect, opacity $animation-speed $animation-effect, border-color $animation-speed $animation-effect, visibility $animation-speed $animation-effect, transform $animation-speed $animation-effect;\r\n\t-webkit-transition: color $animation-speed $animation-effect, background-color $animation-speed $animation-effect, opacity $animation-speed $animation-effect, border-color $animation-speed $animation-effect, visibility $animation-speed $animation-effect, -webkit-transform $animation-speed $animation-effect;\r\n}\r\n// hide tel links on desktop\r\n@media only screen and (min-width:1025px) {\r\n    a[href^=tel],a[href^=skype], a[href^=sms] {\r\n    cursor:default;\r\n    pointer-events:none;\r\n  }\r\n}","// Colors\r\n// Color calculator - http://razorjam.github.io/sasscolourfunctioncalculator/\r\n// Color names - http://name-of-color.com/\r\n\r\n$black: #000;\r\n$white: #fff;\r\n$gray: #666;\r\n$blue: #4a90e2;\r\n$red: #db2023;\r\n$yellow: #f9b42d;\r\n$green: #8ed72b;\r\n\r\n$base-font-sans-serif: 'Arial', 'Helvetica Neue', 'Helvetica', sans-serif;\r\n$base-font-serif: 'Times New Roman', 'Times', 'Baskerville', 'Georgia', serif;\r\n\r\n// Body\r\n$base-text-color: $gray !default;\r\n$base-background-color: $white !default;\r\n$base-font-size: 14px !default;\r\n$base-line-height: 1.429 !default; // 20px\r\n$base-font-family: $base-font-sans-serif !default;\r\n\r\n$vertical-rhythm: ($base-line-height * 1em);\r\n\r\n$base-min-width: 320px;\r\n\r\n// Links\r\n$base-link-color: $blue;\r\n$base-link-hover-color: lighten($blue, 12%);\r\n\r\n// Buttons \r\n$btn-color: $white !default;\r\n$btn-background: $black !default;\r\n$btn-padding: 0.4em 0.7em !default;\r\n$btn-font-size: inherit !default;\r\n\r\n// Forms\r\n$form-element-padding: $btn-padding !default;\r\n$form-element-border-color: $gray !default;\r\n$form-element-focus-border-color: $black !default;\r\n$placeholder-color: $gray !default;\r\n\r\n// Headers\r\n$h1-font-size: 30px !default;\r\n$h2-font-size: 27px !default;\r\n$h3-font-size: 24px !default;\r\n$h4-font-size: 21px !default;\r\n$h5-font-size: 17px !default;\r\n$h6-font-size: 15px !default;\r\n\r\n$headings-font-family: inherit !default;\r\n$headings-color: inherit !default;\r\n\r\n$animation-speed: 0.2s;\r\n$animation-effect: ease;\r\n","// Typography\r\n\r\nh1, .h1,\r\nh2, .h2,\r\nh3, .h3,\r\nh4, .h4,\r\nh5, .h5,\r\nh6, .h6,\r\n.h {\r\n  font-family: $headings-font-family;\r\n  font-weight: bold;\r\n  margin: 0 0 0.5em;\r\n  color: $headings-color;\r\n}\r\n\r\nh1, .h1 {\r\n  font-size: $h1-font-size;\r\n}\r\n\r\nh2, .h2 {\r\n  font-size: $h2-font-size;\r\n}\r\n\r\nh3, .h3 {\r\n  font-size: $h3-font-size;\r\n}\r\n\r\nh4, .h4 {\r\n  font-size: $h4-font-size;\r\n}\r\n\r\nh5, .h5 {\r\n  font-size: $h5-font-size;\r\n}\r\n\r\nh6, .h6 {\r\n  font-size: $h6-font-size;\r\n}\r\n\r\np {\r\n  margin: 0 0 1em;\r\n}\r\n\r\na {\r\n  color: $base-link-color;\r\n  text-decoration:none;\r\n  &:hover{\r\n    color: $base-link-hover-color;\r\n  }\r\n}","// forms\r\n\r\nform,\r\nfieldset {\r\n  margin: 0;\r\n  padding: 0;\r\n  border-style: none;\r\n}\r\n\r\ninput[type='text'],\r\ninput[type='tel'],\r\ninput[type='email'],\r\ninput[type='search'],\r\ninput[type='password'],\r\n//input[type='url'],\r\n// input[type='date'],\r\ntextarea {\r\n  -webkit-appearance: none;\r\n  -webkit-border-radius: 0;\r\n  outline:0;\r\n  border: 1px solid $form-element-border-color;\r\n  padding: $form-element-padding;\r\n\r\n  &:focus {\r\n    border-color: $form-element-focus-border-color;\r\n  }\r\n\r\n  @include placeholder {\r\n    color: $placeholder-color;\r\n  }\r\n}\r\n\r\nselect {\r\n  -webkit-border-radius: 0;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n  vertical-align: top;\r\n  max-width:100%;\r\n  overflow:auto;\r\n}\r\n\r\nbutton,\r\ninput[type='button'],\r\ninput[type='reset'],\r\ninput[type='file'],\r\ninput[type='submit'] {\r\n  -webkit-appearance: none;\r\n  -webkit-border-radius: 0;\r\n  cursor: pointer;\r\n}\r\n\r\n.label,\r\nlabel{\r\n\tdisplay:inline-block;\r\n\tvertical-align:top;\r\n}\r\n\r\n.input-holder{\r\n\t@extend %clearfix;\r\n\tposition:relative;\r\n}\r\n\r\n.input-placeholder-text{\r\n\twhite-space:nowrap;\r\n\tcursor:text;\r\n\t.area &{white-space:normal;}\r\n}\r\n","// @include add-icon(\"\\2120\");\r\n@mixin add-icon($icon) {\r\n\tcontent: $icon;\r\n\tfont-family: 'icomoon';\r\n\tspeak: none;\r\n\tfont-style: normal;\r\n\tfont-weight: normal;\r\n\tfont-variant: normal;\r\n\ttext-transform: none;\r\n\tline-height: 1;\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n// vertical align el inside parent with fixed height/min-height\r\n// usage \r\n// html - .parent>.child\r\n// scss - @include v-align;\r\n//     or @include v-align(250px);\r\n//     or @include v-align(250px, bottom, before);\r\n//\r\n@mixin v-align($va-height: 100%, $va-direction: middle, $va-pseudo: after) {\r\n  white-space: nowrap;\r\n  text-align: center;\r\n\r\n  &:#{$va-pseudo} {\r\n    content: '';\r\n    display: inline-block;\r\n    vertical-align: $va-direction;\r\n    width: 0;\r\n    min-height: $va-height;\r\n  }\r\n\r\n  > * {\r\n    white-space: normal;\r\n    display: inline-block;\r\n    vertical-align: $va-direction;\r\n    max-width: 99%;\r\n  }\r\n}\r\n\r\n// vertical align a pair of child el inside parent\r\n// usage \r\n// html - .post>.image+.text\r\n// scss - @include v-align-pair(image, text);\r\n//     or @include v-align-pair(image, text, bottom);\r\n//     or @include v-align-pair(image, text, middle, 200px);\r\n//\r\n@mixin v-align-pair($child-name1, $child-name2, $valign: middle, $width1: auto, $width2: auto ) {\r\n  display: table;\r\n  .#{$child-name1}{\r\n    display: table-cell;\r\n    vertical-align: $valign;\r\n    width: $width1; \r\n  }\r\n .#{$child-name2} {\r\n    display: table-cell;\r\n    vertical-align: $valign;\r\n    width: $width2;\r\n  }\r\n}\r\n\r\n\r\n// vertical align el\r\n// usage: @include vertical-align-el;\r\n//\r\n@mixin vertical-align-el {\r\n  position: relative;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/// Mixin helping defining both `width` and `height` simultaneously.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @access public\r\n///\r\n/// @param {Length} $width - Element’s `width`\r\n/// @param {Length} $height ($width) - Element’s `height`\r\n///\r\n/// @example scss - Usage\r\n///   .foo {\r\n///     @include size(10em);\r\n///   }\r\n///\r\n///   .bar {\r\n///     @include size(100%, 10em);\r\n///   }\r\n///\r\n/// @example css - CSS output\r\n///   .foo {\r\n///     width: 10em;\r\n///     height: 10em;\r\n///   }\r\n///\r\n///   .bar {\r\n///     width: 100%;\r\n///     height: 10em;\r\n///   }\r\n///\r\n@mixin size($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n/// font-smothing\r\n/// @include font-smoothing(on);\r\n/// @include font-smoothing(off);\r\n@mixin font-smoothing($value:on){\r\n  @if $value == on{\r\n    -webkit-font-smoothing:antialiased;\r\n    -moz-osx-font-smoothing:grayscale;\r\n  }\r\n  @else{\r\n    -webkit-font-smoothing:subpixel-antialiased;\r\n    -moz-osx-font-smoothing:auto;\r\n  }\r\n}\r\n\r\n\r\n/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n///\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include hide-text;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     overflow: hidden;\r\n///     text-indent: 101%;\r\n///     white-space: nowrap;\r\n///   }\r\n///\r\n@mixin hide-text {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n}\r\n\r\n\r\n/// Creates a visual triangle. \r\n/// Mixin takes ($size, $color, $direction)\r\n/// The $size argument can take one or two values—width height.\r\n/// The $color argument can take one or two \r\n/// values—foreground-color background-color.\r\n/// \r\n/// @author http://bourbon.io/docs/#triangle\r\n///\r\n/// $direction: \r\n/// up, down, left, right, up-right, up-left, down-right, down-left\r\n/// @example scss - Usage\r\n///   @include triangle(12px, gray, down);\r\n///   @include triangle(12px 6px, gray blue, up-left);\r\n///\r\n@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left:  $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n\r\n\r\n/// Animate css properties\r\n// usage \r\n// scss - @include animate(color);\r\n//     or @include animate(color width);\r\n//     or @include animate(color width, 1s, linear);\r\n//\r\n$animation-speed: .3s !default;\r\n\r\n@mixin animate($properties, $duration: $animation-speed, $easing: ease-in-out) {\r\n  $list:();\r\n  @each $prop in $properties {\r\n    $str: #{$prop} #{$animation-speed} #{$easing};\r\n    $list: join($list, $str, comma);\r\n  }\r\n  transition: $list;\r\n}\r\n\r\n\r\n/// Mixin for styling form-placeholders\r\n/// @example scss - Usage\r\n///   @include placeholder {\r\n///    color: #333;\r\n///   }\r\n///\r\n///   input[type='text'],\r\n///   input[type='tel'],\r\n///   input[type='email'] {\r\n///     @include placeholder {\r\n///      color: red;\r\n///     }\r\n///   }\r\n\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder {@content}\r\n  &::-moz-placeholder {opacity: 1; @content}\r\n  &:-moz-placeholder {@content}\r\n  &:-ms-input-placeholder {@content}\r\n  &.placeholder {@content}\r\n}\r\n\r\n\r\n","$breakpoints: (\r\n\t'xs-phone': 320px,\r\n\t'phone': 480px,\r\n\t'tablet': 768px,\r\n\t'desktop': 992px,\r\n\t'widescreen': 1200px\r\n);\r\n\r\n// keywords\r\n$media-expressions: (\r\n\t'screen': 'screen',\r\n\t'print': 'print',\r\n\t'handheld': 'handheld',\r\n\t'landscape': '(orientation: landscape)',\r\n\t'portrait': '(orientation: portrait)',\r\n\t'retina2x': '(-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi)',\r\n\t'retina3x': '(-webkit-min-device-pixel-ratio: 2.5), (min-resolution: 240dpi)'\r\n);\r\n\r\n// ligatured operators ≥ ≤\r\n\r\n@import 'vendors/include-media';\r\n@import 'base/icons';\r\n@import 'base/variables';\r\n@import 'base/functions';\r\n@import 'base/mixins';\r\n@import 'base/helpers';\r\n@import 'base/reset';\r\n@import 'base/typography';\r\n@import 'base/forms';\r\n\r\n#wrapper{\r\n\tposition:relative;\r\n\toverflow:hidden;\r\n}\r\n.w1{\r\n\tmax-width:1200px;\r\n\tmargin:0 auto;\r\n\tpadding:0 15px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}